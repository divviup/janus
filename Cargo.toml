[workspace]
members = [
    "aggregator",
    "aggregator_api",
    "aggregator_core",
    "client",
    "collector",
    "core",
    "integration_tests",
    "interop_binaries",
    "messages",
    "tools",
    "xtask",
]
resolver = "2"

[workspace.package]
edition = "2021"
homepage = "https://divviup.org"
license = "MPL-2.0"
repository = "https://github.com/divviup/janus"
rust-version = "1.81.0"
version = "0.7.52"

[workspace.dependencies]
anyhow = "1"
assert_matches = "1"
async-trait = "0.1"
backoff = "0.4.0"
base64 = "0.22.1"
bhttp = "0.5.3"
bytes = "1"
cfg-if = "1.0.0"
# Disable default features to disable compatibility with the old `time` crate, and we also don't
# (yet) need other default features.
# https://docs.rs/chrono/latest/chrono/#duration
chrono = { version = "0.4.39", default-features = false }
clap = { version = "4.5.30", features = ["cargo", "derive", "env"] }
console-subscriber = "0.4.1"
deadpool = "0.12.2"
deadpool-postgres = "0.14.1"
divviup-client = "0.4"
educe = { version = "0.6.0", default-features = false, features = ["Debug"] }
fixed = "1.28"
futures = "0.3.31"
git-version = "0.3.9"
hex = "0.4.3"
hex-literal = "0.4.1"
hpke-dispatch = "0.7.0"
http = "1.2"
http-api-problem = "0.58.0"
itertools = "0.13"
janus_aggregator = { version = "0.7.52", path = "aggregator" }
janus_aggregator_api = { version = "0.7.52", path = "aggregator_api" }
janus_aggregator_core = { version = "0.7.52", path = "aggregator_core" }
janus_client = { version = "0.7.52", path = "client" }
janus_collector = { version = "0.7.52", path = "collector" }
janus_core = { version = "0.7.52", path = "core" }
janus_interop_binaries = { version = "0.7.52", path = "interop_binaries" }
janus_messages = { version = "0.7.52", path = "messages" }
k8s-openapi = { version = "0.22.0", features = ["v1_26"] }  # keep this version in sync with what is referenced by the indirect dependency via `kube`
kube = { version = "0.94.2", default-features = false, features = ["client", "rustls-tls"] }
mockito = "1.6.1"
num_enum = "0.7.3"
ohttp = { version = "0.5.1", default-features = false }
opentelemetry = { version = "0.24", default-features = false, features = ["trace", "metrics"] }
opentelemetry-otlp = { version = "0.17", default-features = false, features = ["trace", "metrics", "grpc-tonic"] }
opentelemetry-prometheus = "0.17"
opentelemetry_sdk = { version = "0.24", default-features = false, features = ["trace", "metrics"] }
pem = "3"
postgres-protocol = "0.6.8"
postgres-types = "0.2.9"
pretty_assertions = "1.4.1"
# Disable default features so that individual workspace crates can choose to
# re-enable them
prio = { version = "0.16.7", default-features = false, features = ["experimental"] }
prometheus = "0.13.4"
querystring = "1.1.0"
quickcheck = { version = "1.0.3", default-features = false }
quickcheck_macros = "1.0.0"
rand = "0.8"
rayon = "1.10.0"
reqwest = { version = "0.12.9", default-features = false, features = ["rustls-tls"] }
regex = "1.11.1"
retry-after = "0.4.0"
ring = "0.17.9"
rstest = "0.22.0"
rstest_reuse = "0.7.0"
rustc_version = "0.4.1"
rustls = "0.23.23"
rustls-pemfile = "2.2.0"
sec1 = "0.7"
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.138"
serde_test = "1.0.177"
serde_urlencoded = "0.7.1"
serde_yaml = "0.9.34"
signal-hook = "0.3.17"
signal-hook-tokio = "0.3.1"
sqlx = "0.8.3"
stopper = "0.2.8"
tempfile = "3.17.1"
testcontainers = "0.22.0"
thiserror = "2.0"
tracing = "0.1.41"
tracing-chrome = "0.7.2"
tracing-log = "0.2.0"
tracing-opentelemetry = "0.25"
tracing-stackdriver = "0.10.0"
tracing-subscriber = "0.3"
tokio = { version = "1.43", features = ["full", "tracing"] }
tokio-postgres = "0.7.13"
tokio-postgres-rustls = "0.12.0"
tokio-stream = "0.1.17"
trillium = "0.2.20"
trillium-api = { version = "0.2.0-rc.12", default-features = false }
trillium-caching-headers = "0.2.3"
trillium-head = "0.2.3"
trillium-macros = "0.0.6"
trillium-opentelemetry = "0.9.0"
trillium-prometheus = "0.2.0"
trillium-proxy = { version = "0.5.5", default-features = false }
trillium-router = "0.4.1"
trillium-rustls = "0.8.1"
trillium-testing = "0.7.0"
trillium-tokio = "0.4.0"
trycmd = "0.15.9"
url = { version = "2.5.4", features = ["serde"] }
uuid = { version = "1.13.1", features = ["v4"] }
wait-timeout = "0.2.1"

[profile.ci]
# Disabling debug info improves build speeds & reduces build artifact sizes, which helps CI caching.
inherits = "dev"
debug = 0
# Incremental compilation is also disabled via environment variable by the Swatinem/rust-cache action.
incremental = false

[profile.small]
# We define a profile intended to minimize the eventual binary size, while still allowing for
# relatively fast compilation. It is intended for use in size-constrained testing scenarios.
inherits = "dev"
opt-level = "z"   # Optimize for size.
debug = false     # Do not generate debug info.
strip = true      # Strip symbols from binary.
